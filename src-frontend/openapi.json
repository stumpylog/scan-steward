{
  "openapi": "3.1.0",
  "info": { "title": "ScanSteward API", "version": "1.0.0", "description": "" },
  "paths": {
    "/api/person/": {
      "post": {
        "operationId": "create_person",
        "summary": "Create person",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonRead" }
              }
            }
          }
        },
        "tags": ["people"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PersonCreate" }
            }
          },
          "required": true
        }
      },
      "get": {
        "operationId": "list_persons",
        "summary": "List persons",
        "parameters": [
          {
            "in": "query",
            "name": "filters",
            "schema": { "default": {}, "title": "Filters", "type": "null" },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PagedPersonRead" }
              }
            }
          }
        },
        "tags": ["people"]
      }
    },
    "/api/person/{id}": {
      "delete": {
        "operationId": "delete_person",
        "summary": "Delete Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": { "title": "Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "tags": ["people"]
      },
      "get": {
        "operationId": "retrieve_person",
        "summary": "Retrieve Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": { "title": "Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonRead" }
              }
            }
          }
        },
        "tags": ["people"]
      },
      "put": {
        "operationId": "update_person",
        "summary": "Update Person",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": { "title": "Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonRead" }
              }
            }
          }
        },
        "tags": ["people"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PersonUpdate" }
            }
          },
          "required": true
        }
      }
    },
    "/api/tag/tree/": {
      "get": {
        "operationId": "scansteward_tags_api_get_tag_tree",
        "summary": "Get Tag Tree",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Name"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TagTree" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": ["tags"]
      }
    },
    "/api/tag/": {
      "get": {
        "operationId": "scansteward_tags_api_get_tags",
        "summary": "Get Tags",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PagedTagRead" }
              }
            }
          }
        },
        "tags": ["tags"]
      },
      "post": {
        "operationId": "scansteward_tags_api_create_tag",
        "summary": "Create Tag",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagRead" }
              }
            }
          },
          "404": { "description": "Not Found Response" },
          "400": { "description": "Tag Already Exists" }
        },
        "tags": ["tags"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagCreate" }
            }
          },
          "required": true
        }
      }
    },
    "/api/tag/{tag_id}": {
      "get": {
        "operationId": "scansteward_tags_api_get_single_tag",
        "summary": "Get Single Tag",
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "schema": { "title": "Tag Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagRead" }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["tags"]
      },
      "patch": {
        "operationId": "scansteward_tags_api_update_tag",
        "summary": "Update Tag",
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "schema": { "title": "Tag Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagRead" }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["tags"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagUpdate" }
            }
          },
          "required": true
        }
      },
      "delete": {
        "operationId": "scansteward_tags_api_delete_tag",
        "summary": "Delete Tag",
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "schema": { "title": "Tag Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["tags"]
      }
    },
    "/api/image/{image_id}/thumbnail/": {
      "get": {
        "operationId": "scansteward_images_api_get_image_thumbnail",
        "summary": "Get Image Thumbnail",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "schema": { "title": "Image Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/full/": {
      "get": {
        "operationId": "scansteward_images_api_get_image_full_size",
        "summary": "Get Image Full Size",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "schema": { "title": "Image Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/original/": {
      "get": {
        "operationId": "scansteward_images_api_get_image_original",
        "summary": "Get Image Original",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "schema": { "title": "Image Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/": {
      "get": {
        "operationId": "scansteward_images_api_get_image_details",
        "summary": "Get Image Details",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "schema": { "title": "Image Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImageDetailsRead" }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["images"]
      }
    },
    "/api/album/": {
      "get": {
        "operationId": "scansteward_albums_api_get_albums",
        "summary": "Get Albums",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedAlbumBasicReadSchema"
                }
              }
            }
          }
        },
        "tags": ["albums"]
      },
      "post": {
        "operationId": "scansteward_albums_api_create_album",
        "summary": "Create Album",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumBasicReadSchema"
                }
              }
            }
          }
        },
        "tags": ["albums"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlbumCreateSchema" }
            }
          },
          "required": true
        }
      }
    },
    "/api/album/{album_id}/": {
      "get": {
        "operationId": "scansteward_albums_api_get_album",
        "summary": "Get Album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesReadSchema"
                }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"]
      },
      "patch": {
        "operationId": "scansteward_albums_api_update_album",
        "summary": "Update Album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumBasicReadSchema"
                }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlbumUpdateSchema" }
            }
          },
          "required": true
        }
      },
      "delete": {
        "operationId": "scansteward_albums_api_delete_album",
        "summary": "Delete Album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/add/": {
      "patch": {
        "operationId": "scansteward_albums_api_add_image_to_album",
        "summary": "Add Image To Album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesReadSchema"
                }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlbumAddImageSchema" }
            }
          },
          "required": true
        }
      }
    },
    "/api/album/{album_id}/remove/": {
      "patch": {
        "operationId": "scansteward_albums_api_remove_image_from_album",
        "summary": "Remove Image From Album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesReadSchema"
                }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumRemoveImageSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/album/{album_id}/sort/": {
      "patch": {
        "operationId": "scansteward_albums_api_update_album_sorting",
        "summary": "Update Album Sorting",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "schema": { "title": "Album Id", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesReadSchema"
                }
              }
            }
          },
          "404": { "description": "Not Found Response" }
        },
        "tags": ["albums"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlbumSortUpdate" }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PersonRead": {
        "description": "Schema when reading a person",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "title": "Id", "type": "integer" }
        },
        "required": ["name", "id"],
        "title": "PersonRead",
        "type": "object"
      },
      "PersonCreate": {
        "description": "Schema to create a Person",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "required": ["name"],
        "title": "PersonCreate",
        "type": "object"
      },
      "Input": {
        "properties": {
          "limit": {
            "default": 100,
            "minimum": 1,
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Input",
        "type": "object"
      },
      "PagedPersonRead": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/PersonRead" },
            "title": "Items",
            "type": "array"
          },
          "count": { "title": "Count", "type": "integer" }
        },
        "required": ["items", "count"],
        "title": "PagedPersonRead",
        "type": "object"
      },
      "PersonUpdate": {
        "description": "Schema to update a person",
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "title": "PersonUpdate",
        "type": "object"
      },
      "TagNameFilter": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "title": "TagNameFilter",
        "type": "object"
      },
      "TagTree": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          },
          "id": { "title": "Id", "type": "integer" },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TreeLikeSimpleNamedTree"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Children"
          }
        },
        "required": ["name", "id"],
        "title": "TagTree",
        "type": "object"
      },
      "TreeLikeSimpleNamedTree": {
        "description": "Common schema for reading the Tree",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          },
          "id": { "title": "Id", "type": "integer" },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TreeLikeSimpleNamedTree"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Children"
          }
        },
        "required": ["name", "id"],
        "title": "TreeLikeSimpleNamedTree",
        "type": "object"
      },
      "PagedTagRead": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/TagRead" },
            "title": "Items",
            "type": "array"
          },
          "count": { "title": "Count", "type": "integer" }
        },
        "required": ["items", "count"],
        "title": "PagedTagRead",
        "type": "object"
      },
      "TagRead": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          },
          "id": { "title": "Id", "type": "integer" },
          "applied": { "title": "Applied", "type": "boolean" }
        },
        "required": ["name", "id", "applied"],
        "title": "TagRead",
        "type": "object"
      },
      "TagCreate": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          }
        },
        "required": ["name"],
        "title": "TagCreate",
        "type": "object"
      },
      "TagUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          }
        },
        "title": "TagUpdate",
        "type": "object"
      },
      "Album": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          },
          "id": { "title": "Id", "type": "integer" }
        },
        "required": ["name", "id"],
        "title": "Album",
        "type": "object"
      },
      "BoundingBox": {
        "properties": {
          "center_x": { "title": "Center X", "type": "number" },
          "center_y": { "title": "Center Y", "type": "number" },
          "height": { "title": "Height", "type": "number" },
          "width": { "title": "Width", "type": "number" }
        },
        "required": ["center_x", "center_y", "height", "width"],
        "title": "BoundingBox",
        "type": "object"
      },
      "ImageDetailsRead": {
        "properties": {
          "face_boxes": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/PersonWithBox" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Face Boxes"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/TagRead" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Tags"
          },
          "albums": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Album" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Albums"
          }
        },
        "title": "ImageDetailsRead",
        "type": "object"
      },
      "PersonWithBox": {
        "properties": {
          "person": { "$ref": "#/components/schemas/PersonRead" },
          "box": { "$ref": "#/components/schemas/BoundingBox" }
        },
        "required": ["person", "box"],
        "title": "PersonWithBox",
        "type": "object"
      },
      "AlbumBasicReadSchema": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "title": "Id", "type": "integer" }
        },
        "required": ["name", "id"],
        "title": "AlbumBasicReadSchema",
        "type": "object"
      },
      "PagedAlbumBasicReadSchema": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/AlbumBasicReadSchema" },
            "title": "Items",
            "type": "array"
          },
          "count": { "title": "Count", "type": "integer" }
        },
        "required": ["items", "count"],
        "title": "PagedAlbumBasicReadSchema",
        "type": "object"
      },
      "AlbumCreateSchema": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "required": ["name"],
        "title": "AlbumCreateSchema",
        "type": "object"
      },
      "AlbumWithImagesReadSchema": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "title": "Id", "type": "integer" },
          "image_ids": {
            "items": { "type": "integer" },
            "title": "Image Ids",
            "type": "array"
          }
        },
        "required": ["name", "id", "image_ids"],
        "title": "AlbumWithImagesReadSchema",
        "type": "object"
      },
      "AlbumUpdateSchema": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "title": "AlbumUpdateSchema",
        "type": "object"
      },
      "AlbumAddImageSchema": {
        "properties": {
          "image_id": { "title": "Image Id", "type": "integer" }
        },
        "required": ["image_id"],
        "title": "AlbumAddImageSchema",
        "type": "object"
      },
      "AlbumRemoveImageSchema": {
        "properties": {
          "image_id": { "title": "Image Id", "type": "integer" }
        },
        "required": ["image_id"],
        "title": "AlbumRemoveImageSchema",
        "type": "object"
      },
      "AlbumSortUpdate": {
        "properties": {
          "sorting": {
            "items": { "type": "integer" },
            "title": "Sorting",
            "type": "array"
          }
        },
        "required": ["sorting"],
        "title": "AlbumSortUpdate",
        "type": "object"
      }
    }
  },
  "servers": []
}
