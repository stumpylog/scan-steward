[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py310"]
line-length = 110

[tool.ruff]
fix = true
output-format = "grouped"
target-version = "py310"
line-length = 120

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
extend-select = [
  "A",
  "ARG",
  "B",
  "C",
  "C4",
  "COM",
  "DTZ",
  "E",
  "EM",
  "ERA",
  "EXE",
  "F",
  "FBT",
  "FLY",
  "I",
  "ICN",
  "INP",
  "INT",
  "ISC",
  "N",
  "PERF",
  "PIE",
  "PGH",
  "PTH",
  "PL",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PT",
  "Q",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "SLF",
  "T",
  "T10",
  "T20",
  "TCH",
  "TD",
  "TID",
  "TRY",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore no author and missing issue link in TODO tags
  "TD002", "TD003"
]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["scansteward"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"**/tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]
# Migrations can use mutable class attributes
"**/migrations/*" = ["RUF012"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["scansteward/tests"]
addopts = "--pythonwarnings=all --cov --cov-report=html --cov-report=json --cov-report=term"
asyncio_mode = "auto"
DJANGO_SETTINGS_MODULE = "scansteward.settings"


[tool.mypy]
plugins = [
  "pydantic.mypy",
  "mypy_django_plugin.main"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
# disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "advanced_alchemy.extensions.litestar.dto",
    "advanced_alchemy.base",
    "advanced_alchemy.types",
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.coverage.run]
branch = true
#concurrency = ["greenlet"]

[tool.coverage.html]
directory = "coverage_html_report"

[tool.django-stubs]
django_settings_module = "scansteward.settings"

[tool.pytest_env]
